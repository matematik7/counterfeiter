// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/matematik7/counterfeiter/fixtures/aliased_package"
)

type FakeInAliasedPackage struct {
	StuffStub        func(int) string
	stuffMutex       sync.RWMutex
	stuffArgsForCall []struct {
		arg1 int
	}
	stuffReturns struct {
		result1 string
	}
}

func (fake *FakeInAliasedPackage) Stuff(arg1 int) string {
	fake.stuffMutex.Lock()
	fake.stuffArgsForCall = append(fake.stuffArgsForCall, struct {
		arg1 int
	}{arg1})
	fake.stuffMutex.Unlock()
	if fake.StuffStub != nil {
		return fake.StuffStub(arg1)
	} else {
		return fake.stuffReturns.result1
	}
}

func (fake *FakeInAliasedPackage) StuffCallCount() int {
	fake.stuffMutex.RLock()
	defer fake.stuffMutex.RUnlock()
	return len(fake.stuffArgsForCall)
}

func (fake *FakeInAliasedPackage) StuffArgsForCall(i int) int {
	fake.stuffMutex.RLock()
	defer fake.stuffMutex.RUnlock()
	return fake.stuffArgsForCall[i].arg1
}

func (fake *FakeInAliasedPackage) StuffReturns(result1 string) {
	fake.StuffStub = nil
	fake.stuffReturns = struct {
		result1 string
	}{result1}
}

var _ the_aliased_package.InAliasedPackage = new(FakeInAliasedPackage)
